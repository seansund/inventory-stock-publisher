spring:
  application:
    name: "${IMAGE_NAME:inventory-stock-publisher}"
  kafka:
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    bootstrap-servers: ${BOOTSTRAP_SERVER:kafka-kafka-bootstrap-kafka.cntk-showcase-ocp4-0143c5dd31acd8e030a1d6e0ab1380e3-0000.us-east.containers.appdomain.cloud:443}

kafka:
  topic: "inventory"

hello:
  pattern: "Hello there, %s!"

greetingservice:
  beanName: "hola"

swagger:
  baseApiPackage:
  - "com.ibm.hello"
  - "com.ibm.health"
  title: "${IMAGE_NAME:template-spring-boot}"
  description: "Description"
  version: "1.0.0"
  termsOfServiceUrl: ""

  license: "MIT"
  licenseUrl: ""

management:
  endpoints:
    web:
      base-path: "/metrics"
      exposure:
        include: "*"

server:
  port: ${PORT:9080}

logging:
  level:
    ROOT: ${LOG_LEVEL:INFO}
    com.ibm.hello: DEBUG
    com.ibm.cloud_garage: DEBUG
    org.springframework: ERROR
    org.springframework.web: WARN
    org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG
    ch.qos.logback.classic: ERROR
  pattern:
    console: "%d{YYYY-dd-MM HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %X{X-B3-TraceId:-} ${spring.application.name} %logger{39}.%M %L - %msg%n"

opentracing:
  jaeger:
    service-name: "${IMAGE_NAME:inventory-stock-publisher}"
    enabled: true
    udp-sender:
      host: ${JAEGER_AGENT:jaeger-agent.tools}
